# -*- coding: utf-8 -*-
"""
Created on Tue Dec  5 14:43:38 2017

@author: perez
"""

import TraitementData as TD
import TraitementEmploiComm as TE
import ModelisationPro as MP


"""""""""""""""""""""""""""""
CHARGEMENT DES DONNES (INSEE)
"""""""""""""""""""""""""""""
bDataBrut = True #False : chargement des données de l'INSEE, 
                  #True : chargement d'un fichier texte réduit (données région ou département)

if (bDataBrut == True):
    """ ============================ DATA ANALYSIS : DEPARTEMENT 69 ============================ """
    #mDataFluxComm = TD.loadData('Flux_mobpro_2013.txt', 2, '69')
    
    # Chargement des données
    mDataLyon = TD.loadData('FD_MOBPRO_2012.txt',1,'69')
    mEmploiLyon = TE.loadXlsEmplois('EFF_APE_AUVERGNE_RHONE_ALPES.xls', '69')
    
    # Mise en forme des données
    vNbModalites = TD.normalisationModalites(mDataLyon)             # Modalités sous forme de numéro : 0, 1, ...
    mDataComm = TD.regroupeParCommune(mDataLyon, vNbModalites)      # Données par commune (1 ligne = 1 commune)

    commNotFound = TD.concatenationDonnees(mDataComm, mEmploiLyon)  # Fusion données INSEE et données Emploi
    mDataX, mDataY = MP.dataToNumpy(mDataComm, [3])                 # Transformation des données en numpy pour optimisation
    
    trainingSet, validationSet = TD.splitSet(mDataY)                # Indices des communes des Training/ Valid. Set
    
    # Paramètres optimisation
    degPoly = 2                                                     # Degré du polynôme pour la régression polynomiale
    Lambda = 6000                                                   # Paramètre de régularisation (pour éviter l'overfitting)
    # Optimisation et résultats
    allTheta = MP.optimisation(mDataX[trainingSet,:], mDataY[trainingSet,:], degPoly, Lambda)
    erreur = MP.error(MP.hypFunction,allTheta,mDataX[validationSet,:],mDataY[validationSet,:], degPoly)
    

    """ ============================ CHECK ERREUR SUR UN AUTRE DEPARTEMENT ============================ """
    idDep = '01'
    mDataDep = TD.loadData('FD_MOBPRO_2012.txt',1,idDep)
    mEmploiDep = TE.loadXlsEmplois('EFF_APE_AUVERGNE_RHONE_ALPES.xls', idDep)
    
    # Mise en forme des données
    vNbModalitesDep = TD.normalisationModalites(mDataDep)             # Modalités sous forme de numéro : 0, 1, ...
    mDataCommDep = TD.regroupeParCommune(mDataDep, vNbModalitesDep)   # Données par commune (1 ligne = 1 commune)

    commNotFound = TD.concatenationDonnees(mDataCommDep, mEmploiDep)  # Fusion données INSEE et données Emploi
    mXDep, mYDep = MP.dataToNumpy(mDataCommDep, [3])     

    erreurDep = MP.error(MP.hypFunction,allTheta,mXDep,mYDep, degPoly)
        